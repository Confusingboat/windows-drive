<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <system:Double x:Key="Expander.FontSize">14</system:Double>

    <SolidColorBrush
        x:Key="Expander.Header.Foreground"
        po:Freeze="True"
        Color="{StaticResource BlackTextColor}" />

    <SolidColorBrush
        x:Key="Expander.Foreground"
        po:Freeze="True"
        Color="{StaticResource BlackTextColor}" />

    <SolidColorBrush
        x:Key="Expander.Default.Header.Background"
        po:Freeze="True"
        Color="{StaticResource GrayColor.Light}" />

    <SolidColorBrush
        x:Key="Expander.MouseOver.Header.Background"
        po:Freeze="True"
        Color="{StaticResource GrayColor}" />

    <SolidColorBrush
        x:Key="Expander.Pressed.Arrow.Stroke"
        po:Freeze="True"
        Color="{StaticResource BlackTextColor}" />

    <SolidColorBrush
        x:Key="Expander.Disabled.Arrow.Stroke"
        po:Freeze="True"
        Color="LightGray" />

    <SolidColorBrush
        x:Key="Expander.Static.Arrow.Stroke"
        po:Freeze="True"
        Color="{StaticResource BlackTextColor}" />

    <Style
        x:Key="ExpanderStyle"
        TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{StaticResource Expander.Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="-1" />
        <Setter Property="Margin" Value="4,4,4,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                DockPanel.Dock="Top"
                                BorderThickness="0"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                MinWidth="30"
                                MinHeight="30"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Padding="{TemplateBinding Padding}"
                                Margin="0">
                                <Grid
                                    x:Name="HeaderWrapper"
                                    Background="{StaticResource Expander.Default.Header.Background}"
                                    SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter
                                        x:Name="HeaderContent"
                                        Grid.Column="0"
                                        ContentSource="Header"
                                        TextElement.FontSize="{StaticResource Expander.FontSize}"
                                        TextElement.Foreground="{StaticResource Expander.Header.Foreground}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="True" />

                                    <TextBlock
                                        x:Name="Arrow"
                                        Grid.Column="1"
                                        DockPanel.Dock="Left"
                                        Text="{StaticResource icon-chevron-down}"
                                        Style="{StaticResource FontIconStyle}"
                                        VerticalAlignment="Center"
                                        Margin="5,0,10,0" />
                                </Grid>
                            </ToggleButton>

                            <ContentPresenter
                                x:Name="ExpandSite"
                                Visibility="Collapsed"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                Focusable="False" />
                        </DockPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="HeaderContent" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="HeaderContent" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="Arrow" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="Arrow" Property="Margin" Value="0,5,0,0" />
                            <Setter TargetName="Arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="HeaderContent" Property="Margin" Value="0,4,0,0" />
                            <Setter TargetName="HeaderContent" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="Arrow" Property="Margin" Value="7,0,0,0" />
                            <Setter TargetName="HeaderContent" Property="Margin" Value="6,0,0,0" />
                            <Setter TargetName="Arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Up" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="0" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="HeaderContent" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="HeaderContent" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="Arrow" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="Arrow" Property="Margin" Value="0,7,0,0" />
                            <Setter TargetName="Arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="HeaderContent" Property="Margin" Value="0,4,0,0" />
                            <Setter TargetName="HeaderContent" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="True" />
                                <Condition Property="ExpandDirection" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderWrapper" Property="Background" Value="{StaticResource Expander.MouseOver.Header.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
