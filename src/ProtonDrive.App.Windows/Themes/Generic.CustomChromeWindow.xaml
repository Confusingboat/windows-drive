<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ProtonDrive.App.Windows.Toolkit.Converters"
    xmlns:local="clr-namespace:ProtonDrive.App.Windows.Toolkit.Windows"
    xmlns:systemIntegration="clr-namespace:ProtonDrive.App.Windows.SystemIntegration">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Resources/Styles/ButtonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style
        x:Key="CustomChromeWindow.WindowCommandButton.Style"
        TargetType="Button"
        BasedOn="{StaticResource TransparentButtonStyle}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="{Binding TitleBarButtonWidth, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Height" Value="{Binding TitleBarButtonHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="TextElement.FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="TextElement.FontSize" Value="10" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush
                            Opacity=".3"
                            Color="LightGray" />
                    </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush
                            Opacity=".5"
                            Color="LightGray" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="CustomChromeWindow.WindowCommandButton.Close.Style"
        TargetType="Button"
        BasedOn="{StaticResource CustomChromeWindow.WindowCommandButton.Style}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E81123" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#F1707A" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:CustomChromeWindow}">
        <Setter Property="OuterResizeBorderThickness" Value="{Binding ResizeBorderThickness, Source={x:Static systemIntegration:ObservableSystemParameters.Instance}}" />
        <Setter Property="OuterBorderPadding" Value="{Binding BorderPaddingWidth, Source={x:Static systemIntegration:ObservableSystemParameters.Instance}, Converter={x:Static converters:NumberToUniformThicknessConverter.Instance}}" />
        <Setter Property="ActiveOuterBorderBrush" Value="{DynamicResource ResourceKey={x:Static SystemColors.ActiveBorderBrushKey}}" />
        <Setter Property="InactiveOuterBorderBrush" Value="{DynamicResource ResourceKey={x:Static SystemColors.InactiveBorderBrushKey}}" />
        <Setter Property="ActiveTitleBarBackground" Value="{DynamicResource ResourceKey={x:Static SystemColors.ActiveCaptionBrushKey}}" />
        <Setter Property="ActiveTitleBarForeground" Value="{DynamicResource ResourceKey={x:Static SystemColors.ActiveCaptionTextBrushKey}}" />
        <Setter Property="InactiveTitleBarBackground" Value="{DynamicResource ResourceKey={x:Static SystemColors.InactiveCaptionBrushKey}}" />
        <Setter Property="InactiveTitleBarForeground" Value="{DynamicResource ResourceKey={x:Static SystemColors.InactiveCaptionTextBrushKey}}" />
        <Setter Property="TitleFontSize" Value="{Binding FontSize, RelativeSource={RelativeSource Self}}" />
        <Setter Property="TitleBarHeight" Value="{DynamicResource {x:Static SystemParameters.CaptionHeightKey}}" />
        <Setter Property="TitleBarButtonWidth" Value="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonWidthKey}}" />
        <Setter Property="TitleBarButtonHeight" Value="{DynamicResource {x:Static SystemParameters.WindowCaptionButtonHeightKey}}" />
        <Setter Property="HideDisabledTitleBarSystemButtons" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ResourceKey={x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="WindowCommandButtonStyle" Value="{StaticResource CustomChromeWindow.WindowCommandButton.Style}" />
        <Setter Property="CloseButtonStyle" Value="{StaticResource CustomChromeWindow.WindowCommandButton.Close.Style}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomChromeWindow}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border
                            x:Name="outerBorder"
                            BorderBrush="{TemplateBinding ActiveOuterBorderBrush}"
                            BorderThickness="{TemplateBinding ActualOuterBorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{TemplateBinding TitleBarHeight, Converter={x:Static converters:DoubleToGridLengthConverter.Instance}}" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border
                                    x:Name="titleBarBorder"
                                    Grid.Row="0"
                                    Background="{TemplateBinding ActiveTitleBarBackground}"
                                    TextElement.Foreground="{TemplateBinding ActiveTitleBarForeground}"
                                    Padding="{TemplateBinding TitleBarPadding}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <ContentPresenter
                                            x:Name="titleBarLeftPart"
                                            Grid.Column="0"
                                            Content="{TemplateBinding TitleBarLeftPart}"
                                            ContentTemplate="{TemplateBinding TitleBarLeftPartTemplate}"
                                            WindowChrome.IsHitTestVisibleInChrome="True" />

                                        <TextBlock
                                            x:Name="titleTextBlock"
                                            Grid.Column="1"
                                            Text="{TemplateBinding Title}"
                                            FontSize="{TemplateBinding TitleFontSize}"
                                            FontWeight="{TemplateBinding TitleFontWeight}"
                                            TextTrimming="CharacterEllipsis"
                                            VerticalAlignment="Center"
                                            Margin="5,0,0,0" />

                                        <ContentPresenter
                                            x:Name="titleBarRightPart"
                                            Grid.Column="2"
                                            Content="{TemplateBinding TitleBarRightPart}"
                                            ContentTemplate="{TemplateBinding TitleBarRightPartTemplate}"
                                            WindowChrome.IsHitTestVisibleInChrome="True"
                                            Margin="5,0,0,0" />

                                        <StackPanel
                                            Grid.Column="3"
                                            Orientation="Horizontal"
                                            Margin="5,0,0,0">
                                            <Button
                                                x:Name="minimizeButton"
                                                Content="&#xe921;"
                                                Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                                                Style="{TemplateBinding WindowCommandButtonStyle}" />
                                            <Button
                                                x:Name="maximizeButton"
                                                Content="&#xe922;"
                                                Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                                                Style="{TemplateBinding WindowCommandButtonStyle}"
                                                Margin="1,0,0,0" />
                                            <Button
                                                x:Name="restoreButton"
                                                Content="&#xe923;"
                                                Command="{x:Static SystemCommands.RestoreWindowCommand}"
                                                Style="{TemplateBinding WindowCommandButtonStyle}"
                                                Margin="1,0,0,0" />
                                            <Button
                                                x:Name="closeButton"
                                                Content="&#xe8bb;"
                                                Command="{x:Static SystemCommands.CloseWindowCommand}"
                                                Style="{TemplateBinding CloseButtonStyle}"
                                                Margin="1,0,0,0" />
                                        </StackPanel>
                                    </Grid>
                                </Border>

                                <AdornerDecorator Grid.Row="1">
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                        <ContentPresenter />
                                    </Border>
                                </AdornerDecorator>
                            </Grid>
                        </Border>

                        <Border
                            x:Name="hitTestCancelingBorder"
                            Background="{x:Null}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding ActualResizeBorderThickness}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TitleIsVisible" Value="False">
                            <Setter TargetName="titleTextBlock" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{Binding InactiveOuterBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="titleBarBorder" Property="Background" Value="{Binding InactiveTitleBarBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="titleBarBorder" Property="TextElement.Foreground" Value="{Binding InactiveTitleBarForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="HasSystemMenu" Value="False">
                            <Setter TargetName="minimizeButton" Property="IsEnabled" Value="False" />
                            <Setter TargetName="maximizeButton" Property="IsEnabled" Value="False" />
                            <Setter TargetName="restoreButton" Property="IsEnabled" Value="False" />
                            <Setter TargetName="closeButton" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="HideDisabledTitleBarSystemButtons" Value="True">
                            <Setter TargetName="minimizeButton" Property="Visibility" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Setter TargetName="maximizeButton" Property="Visibility" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Setter TargetName="restoreButton" Property="Visibility" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Setter TargetName="closeButton" Property="Visibility" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="maximizeButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="restoreButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResize">
                            <Setter TargetName="hitTestCancelingBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="hitTestCancelingBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="TitleBarLeftPart" Value="{x:Null}">
                            <Setter TargetName="titleBarLeftPart" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="TitleBarRightPart" Value="{x:Null}">
                            <Setter TargetName="titleBarRightPart" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>